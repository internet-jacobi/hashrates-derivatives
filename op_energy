>  Doesn't this require a division operator? There is none currently in script. Does your proposal plan to add one? To be clear, if blockRevenue and blockWork both double, OP_ENERGY should remain the same. The important thing is the ratio, not the absolute quantities.


>  Actually, I just realized there is a potential way around it. Deploy slowly, and include a "genesis chainRevenue" checkpoint in the deployment for a well buried block.


"First, if you assume low-grades nodes deployed on the network have a supplemental ~10MB of cache available for processing it would be better to allocate it to hold a wider subset of the uxto set. And thus
fasten block validation and propagation. UTXO set is called to grow in the coming decade with the number of Bitcoin users and its scaling isn't a problem yet solved [0]. If the number of utxo set cache
misses increase, some low-grades nodes might not be able to keep up. In-memory cache is a scarce resource and a good chunk of folks would prefer to allocate it to block validation, at least it would make
a slight block size increase more realistic.

Secondly, it will be also an increase of the DoS surface. Already today, an attacker could forge blocks with transactions fetching a lot of old coins, probably not present in cache, and thus stale block
validation of some targeted nodes. How do we mitigate against this is still an ongoing topic of discussion among bitcoin developers. Adding a new historical block-reward cache as OP_ENERGY is suggesting,
would make those DoS issues worst. An attacker could fulfill redeemScripts with a lot of OP_ENERGY pointing to old blocks.

Thirdly, it will also break validation of pruned nodes. As they don't have access to the historical chain data, they won't be able to validate OP_ENERGY scritps. Of course, a theoritical solution would
be for that class of clients to re-download the chain around OP_ENERGY deployment but really hard to coordinate in practice.

Lastly, note that the coin cache is one of the most-critical and hard-to-get-right component of Bitcoin Core. Doubling it with a new consensus-critical block-reward cache is going against the current
effort of Core to isolate and reduce the peremiter of the validation engine [1]

That said, yes OP_ENERGY is *technically* possible in its current form but its engineering/resources requirements sounds too hard with exposed information in mind ? It's likely wiser to propose
an opcode providing the same functionality while minimizing resources demands on Bitcoin node."

> This price is a protocol measure of the energy cost of mining between two blocks, in expected future hashes per satoshi


